{"version":3,"file":"static/js/208.007c1404.chunk.js","mappings":"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","sources":["components/Link.jsx","hooks/useUpdateTitle.js","components/input/Checkbox.jsx","pages/auth/Login.jsx"],"sourcesContent":["import { Link as RouterLink } from \"react-router-dom\";\r\nexport default function Link({ children, ...props }) {\r\n  return (\r\n    <RouterLink className=\"underline hover:text-teal-500 font-sans\" {...props}>\r\n      {children}\r\n    </RouterLink>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport default function useUpdateTitle(title) {\r\n    const prevTitle = document.title;\r\n\r\n    useEffect(() => {\r\n        document.title = title;\r\n        return () => document.title = prevTitle; // Reset title on unmount\r\n    }, [title, prevTitle]);\r\n}","export default function CheckBox({ ...props }) {\r\n  return <input type=\"checkbox\" className=\"inline-block\" {...props} />;\r\n}\r\n","import { useState } from \"react\";\r\nimport Button from \"../../components/button/Button\";\r\nimport CheckBox from \"../../components/input/Checkbox\";\r\nimport EmailInput from \"../../components/input/EmailInput\";\r\nimport Label from \"../../components/input/Label\";\r\nimport PasswordInput from \"../../components/input/PasswordInput\";\r\nimport useUpdateTitle from \"../../hooks/useUpdateTitle\";\r\nimport Link from \"../../components/Link\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport http from \"../../util/http\";\r\nimport Notification from \"../../components/Notification\";\r\nimport isEmpty from \"../../util/isEmpty\";\r\nimport isEmail from \"../../util/isEmail\";\r\nimport useLoading from \"../../hooks/useLoading\";\r\nimport { useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\n\r\n/**\r\n * Login page\r\n */\r\nfunction Login() {\r\n  const [checked, setChecked] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [notification, setNotification] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  useLoading(loading);\r\n\r\n  /** Handle user role dynamically */\r\n  const { role } = useParams();\r\n\r\n  useUpdateTitle(`${role} login`);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      role !== \"student\" &&\r\n      role !== \"parent\" &&\r\n      role !== \"teacher\" &&\r\n      role !== \"librarian\" &&\r\n      role !== \"accountant\" &&\r\n      role !== \"admin\" &&\r\n      role !== \"super-admin\"\r\n    )\r\n      navigate(\"/login\");\r\n  }, [navigate, role]);\r\n\r\n  const toggleChecked = () => setChecked(!checked);\r\n\r\n  /**\r\n   * Login request for user\r\n   */\r\n  const login = useCallback(async () => {\r\n    if (isEmpty(email))\r\n      return setNotification({\r\n        text: \"email is required\",\r\n        type: \"error\",\r\n      });\r\n\r\n    if (isEmpty(password))\r\n      return setNotification({\r\n        text: \"password is required\",\r\n        type: \"error\",\r\n      });\r\n\r\n    if (!isEmail(email))\r\n      return setNotification({\r\n        text: \"please enter a valid email\",\r\n        type: \"error\",\r\n      });\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      await http.post(\r\n        `login/${role}`,\r\n        { email, password, onetime: !checked },\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setNotification({\r\n        text: \"logged in success, redirecting please wait...\",\r\n        type: \"success\",\r\n      });\r\n\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      setNotification({\r\n        text: error.response.data.message[0],\r\n        type: \"error\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [checked, email, password, navigate, role]);\r\n\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 max-w-lg flex-grow rounded-sm shadow-2xl\">\r\n      <div className=\"p-2\"></div>\r\n      <h1 className=\"text-3xl text-gray-900 font-semibold tracking-normal font-lato\">\r\n        {role.slice(0, 1).toUpperCase()}\r\n        {role.slice(1)} login\r\n      </h1>\r\n      <p>\r\n        <Link to=\"/login\">not {role}?</Link> login as other user\r\n      </p>\r\n\r\n      <div className=\"p-2\"></div>\r\n      <Label>Email</Label>\r\n      <EmailInput\r\n        name=\"email\"\r\n        value={email}\r\n        onInput={(e) => setEmail(e.target.value)}\r\n      />\r\n\r\n      <div className=\"p-1\"></div>\r\n\r\n      <Label>Password</Label>\r\n      <PasswordInput\r\n        name=\"password\"\r\n        value={password}\r\n        onInput={(e) => setPassword(e.target.value)}\r\n      />\r\n\r\n      <div className=\"flex justify-between mt-1\">\r\n        <div>\r\n          <CheckBox checked={checked} onChange={toggleChecked} />\r\n          <span className=\"ml-1\"></span>\r\n          <Label small={true} onClick={toggleChecked}>\r\n            remember me\r\n          </Label>\r\n        </div>\r\n        <div>\r\n          <Label small={true}>\r\n            <Link to={`/login/${role}/forgot-password`}>forgot password?</Link>\r\n          </Label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"p-2\"></div>\r\n      <Button onClick={login}>Login</Button>\r\n      <div className=\"p-2\"></div>\r\n      {notification.text && (\r\n        <Notification\r\n          type={notification.type}\r\n          onClose={() => setNotification({})}\r\n          closeOnBGClick={true}\r\n        >\r\n          {notification.text}\r\n        </Notification>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["Link","children","props","className","useUpdateTitle","title","prevTitle","document","useEffect","CheckBox","type","useState","checked","setChecked","email","setEmail","password","setPassword","notification","setNotification","loading","setLoading","navigate","useNavigate","useLoading","role","useParams","toggleChecked","login","useCallback","isEmpty","text","isEmail","http","onetime","headers","response","data","message","slice","toUpperCase","to","Label","EmailInput","name","value","onInput","e","target","PasswordInput","onChange","small","onClick","Button","Notification","onClose","closeOnBGClick"],"sourceRoot":""}