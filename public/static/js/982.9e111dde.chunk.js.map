{"version":3,"file":"static/js/982.9e111dde.chunk.js","mappings":"uKAIe,SAASA,EAAO,GAAsB,IAApBC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MACzC,OAAO,gCAAKC,UAAU,0DAA6DD,GAAK,aAAGD,IAC7F,C,qECJe,SAASG,EAAWC,IAC/BC,EAAAA,EAAAA,YAAU,WAGN,OAFAC,SAASC,KAAKC,UAAUC,OAAO,UAAWL,GAEnC,kBAAME,SAASC,KAAKC,UAAUE,OAAO,UAAW,CAC3D,GAAG,CAACN,GACR,C,4ICFe,SAASO,EAAa,GAAe,IAAbX,EAAQ,EAARA,SACnC,GAAoCY,EAAAA,EAAAA,WAAS,GAAK,eAA3CC,EAAU,KAAEC,EAAa,KAChC,GAA8BF,EAAAA,EAAAA,WAAS,GAAK,eAArCG,EAAO,KAAEC,EAAU,KACpBC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAf,EAAAA,EAAAA,GAAWY,IAEXV,EAAAA,EAAAA,YAAU,WACNc,EAAAA,EAAAA,IACS,YACJC,MAAK,WACFH,EAAS,IACb,IACCI,OAAM,WACHP,GAAc,EAClB,IACCQ,SAAQ,WACLN,GAAW,EACf,GACR,GAAG,CAACC,KAEIJ,IACJ,SAAC,UAAM,UACFb,GAGb,C,qCC3BA,IAAeuB,EAAAA,EAAAA,OAAa,CACxBC,QAJkB,OAKlBC,iBAAiB,G","sources":["components/Center.jsx","hooks/useLoading.js","pages/auth/LoginHandler.jsx","util/http.js"],"sourcesContent":["/**\r\n * Center component and return\r\n * @returns {React.CreateElement}\r\n */\r\nexport default function Center({ children, props }) {\r\n  return <div className=\"flex flex-row items-center justify-center min-h-screen\" {...props}>{children}</div>;\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport default function useLoading(state) {\r\n    useEffect(() => {\r\n        document.body.classList.toggle('loading', state);\r\n\r\n        return () => document.body.classList.remove('loading');\r\n    }, [state]);\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Center from \"../../components/Center\";\r\nimport useLoading from \"../../hooks/useLoading\";\r\nimport http from \"../../util/http\";\r\n\r\nexport default function LoginHandler({ children }) {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(true)\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    useLoading(loading);\r\n\r\n    useEffect(() => {\r\n        http\r\n            .get('/user/me')\r\n            .then(() => {\r\n                navigate('/')\r\n            })\r\n            .catch(() => {\r\n                setIsLoggedIn(false)\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [navigate])\r\n\r\n    return !isLoggedIn &&\r\n        <Center>\r\n            {children}\r\n        </Center>\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst productionURL = '/api';\r\nconst devURL = 'http://localhost/api';\r\n\r\nexport default axios.create({\r\n    baseURL: process.env.NODE_ENV === 'production' ? productionURL : devURL,\r\n    withCredentials: true\r\n});"],"names":["Center","children","props","className","useLoading","state","useEffect","document","body","classList","toggle","remove","LoginHandler","useState","isLoggedIn","setIsLoggedIn","loading","setLoading","navigate","useNavigate","http","then","catch","finally","axios","baseURL","withCredentials"],"sourceRoot":""}