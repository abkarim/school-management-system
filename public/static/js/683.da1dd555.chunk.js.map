{"version":3,"file":"static/js/683.da1dd555.chunk.js","mappings":"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","sources":["components/button/Button.jsx","components/input/EmailInput.jsx","components/input/Label.jsx","components/input/PasswordInput.jsx","components/input/TextInput.jsx","components/button/CloseButton.jsx","components/Notification.jsx","util/isEmpty.js","pages/user/CreateSuperUser.jsx","hooks/useLoading.js","util/http.js"],"sourcesContent":["export default function Button({ children, ...props }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"inline-block w-full p-1 border-2 bg-gradient-to-r border-teal-600 from-teal-500 to-teal-600 rounded-sm transition-colors text-white text-lg  font-semibold font-lato\"\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}\n","export default function EmailInput({ ...props }) {\n    return (\n      <input\n        type=\"email\"\n        className=\"bg-slate-100 border-gray-500  border-2 p-1 rounded-sm w-full focus:border-gray-800 text-lg text-gray-900\"\n        {...props}\n      />\n    );\n  }\n  ","export default function Label({ children, small = false, ...props }) {\n  return (\n    <label\n      className={`${\n        !small ? \"text-lg\" : \"text-sm\"\n      } text-gray-800 font-sans tracking-tight inline-block`}\n      {...props}\n    >\n      {children}\n    </label>\n  );\n}\n","import { useState } from \"react\";\nimport showImg from \"./../../img/show.png\";\nimport hideImg from \"./../../img/hide.png\";\n\nexport default function PasswordInput({ ...props }) {\n  const [type, setType] = useState(\"password\");\n  const [img, setImg] = useState(showImg);\n  /**\n   * toggle password\n   */\n  const togglePassword = () => {\n    if (type === \"password\") {\n      setImg(hideImg);\n      return setType(\"text\");\n    }\n    setImg(showImg);\n    setType(\"password\");\n  };\n\n  return (\n    <div className=\"relative\">\n      <input\n        type={type}\n        className=\"bg-slate-100 border-gray-500  border-2 p-1 rounded-sm w-full focus:border-gray-800 text-lg text-gray-900\"\n        {...props}\n      />\n      <span\n        onClick={togglePassword}\n        className=\"inline-block absolute top-0 right-1 p-1 cursor-pointer\"\n      >\n        <img alt=\"toggle\" src={img} />\n      </span>\n    </div>\n  );\n}\n","export default function TextInput({ ...props }) {\n  return (\n    <input\n      type=\"text\"\n      className=\"bg-slate-100 border-gray-500  border-2 p-1 rounded-sm w-full focus:border-gray-800 text-lg text-gray-900\"\n      {...props}\n    />\n  );\n}\n","export default function CloseButton({ ...props }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"group bg-white hover:bg-red-500 rounded-full p-1 flex\"\n      {...props}\n    >\n      <span className=\"inline-block bg-img-close-red group-hover:bg-img-close-white bg-no-repeat bg-center p-2\"></span>\n    </button>\n  );\n}\n","import CloseButton from \"./button/CloseButton\";\n\nexport default function Notification({ type = \"\", onClose, closeOnBGClick = false, children, ...props }) {\n  let bgClass = \"\";\n  let fgClass = \"\";\n\n  switch (type) {\n    case \"warning\":\n      bgClass = \"bg-gradient-to-r from-yellow-300 to-yellow-400\"\n      break;\n    case \"error\":\n      bgClass = \"bg-gradient-to-r from-red-600 to-red-700\"\n      fgClass = \"text-white\";\n      break;\n    case \"info\":\n      bgClass = \"bg-gradient-to-r from-blue-500 to-blue-600\"\n      fgClass = \"text-white\";\n      break;\n    default:\n      bgClass = \"bg-gradient-to-l from-green-600 to-emerald-600\";\n      fgClass = \"text-white\";\n  }\n\n  return (\n    <>\n      <div className={`fixed inset-0 backdrop-blur-sm z-40 ${closeOnBGClick ? 'cursor-pointer' : ''}`} onClick={closeOnBGClick ? onClose : () => { }}></div>\n      <div\n        className={`absolute bottom-5 right-5 rounded-md p-2 px-4 shadow-xl max-w-xs flex items-center z-50 transition ${bgClass}`}\n        {...props}\n      >\n        <span\n          className={`block font-bold font-lato leading-5 tracking-wide text-start ${fgClass}`}\n        >\n          {children}\n        </span>\n        <span className=\"inline-block p-2\" onClick={onClose}>\n          <CloseButton />\n        </span>\n      </div>\n    </>\n  );\n}\n","export default function isEmpty(text) {\n    return text.trim().length === 0\n}","import EmailInput from \"../../components/input/EmailInput\";\nimport Label from \"../../components/input/Label\";\nimport TextInput from \"../../components/input/TextInput\";\nimport PasswordInput from \"../../components/input/PasswordInput\";\nimport Button from \"../../components/button/Button\";\nimport http from \"../../util/http\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport useLoading from \"../../hooks/useLoading\";\nimport { useEffect, useState } from \"react\";\nimport Notification from \"../../components/Notification\";\nimport isEmpty from \"../../util/isEmpty\";\n/**\n * ! Error in this file\n */\n// import isEmail from \"../../util/isEmail\";\n\nexport default function CreateSuperUser() {\n  const navigate = useNavigate();\n  const [userExists, setUserExists] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [notification, setNotification] = useState({})\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    cPassword: ''\n  })\n\n  useLoading(loading);\n\n  useEffect(() => {\n    http\n      .get(\"/user/super-admin\")\n      .then(() => {\n        setUserExists(false);\n        setLoading(false);\n      })\n      .catch(() => setUserExists(true));\n  }, []);\n\n  const submit = async () => {\n    if (\n      isEmpty(formData.name) || isEmpty(formData.email) ||\n      isEmpty(formData.password) || isEmpty(formData.cPassword)\n    ) return setNotification({\n      text: \"please fill all the input\",\n      type: 'error'\n    })\n\n\n    /**\n     * ! Error\n     */\n    // if (!isEmail(formData.email)) return setNotification({\n    //   text: \"please enter a valid email\",\n    //   type: 'error'\n    // })\n\n    if (formData.password !== formData.cPassword) return setNotification({\n      text: \"passwords not matched\",\n      type: 'error'\n    })\n\n    try {\n      await http.post(\"/user/super-admin\", {\n        name: formData.name.trim(),\n        email: formData.email.trim(),\n        password: formData.password.trim(),\n      }, {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      });\n      navigate('/login/super-admin')\n    } catch (error) {\n      setNotification({\n        text: error.response.data.message[0],\n        type: 'error'\n      })\n    }\n  };\n\n  return userExists ? (\n    <Navigate to=\"/\" />\n  ) : (\n    <div className=\"bg-white max-w-lg flex-grow rounded-sm shadow-2xl box-content p-4\">\n      <div className=\"p-2\"></div>\n      <h1 className=\"text-3xl text-gray-900 font-lato font-semibold tracking-normal\">\n        Create super user\n      </h1>\n      <div className=\"p-2\"></div>\n      <Label>Enter name</Label>\n      <TextInput value={formData.name} onInput={(e) => setFormData({ ...formData, name: e.target.value })} />\n      <div className=\"p-2\"></div>\n      <Label>Enter email</Label>\n      <EmailInput value={formData.email} onInput={(e) => setFormData({ ...formData, email: e.target.value })} />\n      <div className=\"p-2\"></div>\n      <Label>Enter password</Label>\n      <PasswordInput value={formData.password} onInput={(e) => setFormData({ ...formData, password: e.target.value })} />\n      <div className=\"p-2\"></div>\n      <Label>Confirm password</Label>\n      <PasswordInput value={formData.cPassword} onInput={(e) => setFormData({ ...formData, cPassword: e.target.value })} />\n      <div className=\"p-3\"></div>\n      <Button onClick={submit}>Create user</Button>\n      <div className=\"p-2\"></div>\n      {notification.text &&\n        <Notification type={notification.type} onClose={() => setNotification({})} closeOnBGClick={true}>\n          {notification.text}\n        </Notification>\n      }\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport default function useLoading(state) {\n    useEffect(() => {\n        document.body.classList.toggle('loading', state);\n\n        return () => document.body.classList.remove('loading');\n    }, [state]);\n}","import axios from \"axios\";\n\nconst productionURL = '/api';\nconst devURL = 'http://localhost/api';\n\nexport default axios.create({\n    baseURL: process.env.NODE_ENV === 'production' ? productionURL : devURL,\n    withCredentials: true\n});"],"names":["Button","children","props","type","className","EmailInput","Label","small","PasswordInput","useState","setType","showImg","img","setImg","onClick","alt","src","TextInput","CloseButton","Notification","onClose","closeOnBGClick","bgClass","fgClass","isEmpty","text","trim","length","CreateSuperUser","state","navigate","useNavigate","userExists","setUserExists","loading","setLoading","notification","setNotification","name","email","password","cPassword","formData","setFormData","useEffect","document","body","classList","toggle","remove","http","then","catch","submit","headers","response","data","message","to","value","onInput","e","target","axios","baseURL","withCredentials"],"sourceRoot":""}